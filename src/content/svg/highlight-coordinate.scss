@mixin showCoordinate() {
    .dot {
        stroke: red;
        stroke-width: 3; // Make is bigger
        filter: drop-shadow(0px 0px 2px rgba(93, 18, 18, 0.3));
    }
    .label {
        display: block;
    }
}

@mixin ifCodeHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector) {
    .markdown-example:has(pre #{$elementSelector} #{$coordinateSelector}:hover) {
        .svg-highlight #{$elementSelector} + .coordinates #{$coordinateSelector} {
            @include showCoordinate();
        }
    }
}

@mixin ifBaseHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector) {
    .markdown-example:has(svg #{$elementSelector} + .coordinates #{$coordinateSelector}:hover) {
        .svg-highlight #{$elementSelector} + .coordinates #{$coordinateSelector} {
            @include showCoordinate();
        }

        pre #{$elementSelector} #{$coordinateSelector} {
            background-color: rgba(57, 100, 173, 0.8); // Matches the plugin style
        }
    }
}

@mixin highlightCoordinate($x, $y) {
    $elementSelector: '*';
    $coordinateSelector: '.coordinate[data-x="#{$x}"][data-y="#{$y}"]';
    @include ifCodeHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector);
    @include ifBaseHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector);
}

@mixin highlightElementCoordinate($element, $x, $y) {
    $elementSelector: '[data-element-id="#{$element}"]';
    $coordinateSelector: '.coordinate[data-x="#{$x}"][data-y="#{$y}"]';
    @include ifCodeHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector);
    @include ifBaseHoveredHighlightElementCoordinate($elementSelector, $coordinateSelector);
}