---
import SVGGrid from "./SVGGrid.astro";
import SVGContent from "./SVGContent.astro";

export interface Props {
  width: string;
  viewBox: string;
  [key: string]: string;
}

const { width, viewBox, ...props } = Astro.props as Props;
const [minX, minY, viewBoxWidth, viewBoxHeight] = viewBox
  .split(" ")
  .map(Number);

const zoom = viewBoxWidth / Number(width);
---

<div class="svg-container">
  <div class="svg-viewbox-values">
    <span>{minX}, {minY}</span>
    <span></span>
  </div>
  <svg width={width} viewBox={viewBox} {...props}>
    <SVGGrid
      minX={minX}
      minY={minY}
      viewBoxWidth={viewBoxWidth}
      viewBoxHeight={viewBoxHeight}
    />
    <SVGContent>
      <slot />
    </SVGContent>
  </svg>
  <div class="svg-viewbox-values">
    <span></span>
    <span>{viewBoxWidth}, {viewBoxHeight}</span>
  </div>
</div>

<style is:global define:vars={{ width, zoom }}>
  .svg-container {
    width: calc(var(--width) * 1px);
  }

  .svg-viewbox-values {
    display: flex;
    justify-content: space-between;
    font-size: 0.7em;
    color: gray;
  }
</style>
