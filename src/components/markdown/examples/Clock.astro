<div class="clock">
  <svg width="200" height="200" viewBox="-100 -100 200 200">
    <circle class="minute_marker" r="90" pathLength="60"></circle>
    <circle class="hour_marker" r="90" pathLength="60"></circle>
    <text id="text" class="text" x="45" y="5"></text>

    <g id="hour_hand">
      <line class="hand" x1="0" y1="0" x2="0" y2="-50"></line>
      <line class="hand hand--thick" x1="0" y1="-12" x2="0" y2="-50"></line>
    </g>

    <g id="minute_hand">
      <line class="hand" x1="0" y1="0" x2="0" y2="-80"></line>
      <line class="hand hand--thick" x1="0" y1="-12" x2="0" y2="-80"></line>
    </g>

    <g id="second_hand">
      <line class="hand hand--second" x1="0" y1="12" x2="0" y2="-80"></line>
    </g>

    <circle class="center" r="3"></circle>
  </svg>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    /*

    Learn how to code this watch step by step on YouTube:

    https://www.youtube.com/watch?v=ULomsOSk4JA

    Follow me on twitter for more: https://twitter.com/HunorBorbely

    */

    const textElement = document.getElementById("text");
    const hoursElement = document.getElementById("hour_hand");
    const minutesElement = document.getElementById("minute_hand");
    const secondsElement = document.getElementById("second_hand");

    let showDate = true;

    function animate() {
      if (!textElement) return;
      if (!hoursElement) return;
      if (!minutesElement) return;
      if (!secondsElement) return;

      const date = new Date();

      const day = date.getDate();
      const ampm = date.getHours() >= 12 ? "PM" : "AM";
      const hour = date.getHours() + date.getMinutes() / 60;
      const minute = date.getMinutes() + date.getSeconds() / 60;
      const second = date.getSeconds() + date.getMilliseconds() / 1000;

      textElement.textContent = showDate ? `${day}` : ampm;
      hoursElement.setAttribute("transform", `rotate(${(360 / 12) * hour})`);
      minutesElement.setAttribute(
        "transform",
        `rotate(${(360 / 60) * minute})`
      );
      secondsElement.setAttribute(
        "transform",
        `rotate(${(360 / 60) * second})`
      );

      requestAnimationFrame(animate);
    }

    requestAnimationFrame(animate);

    textElement?.addEventListener("mousedown", () => {
      showDate = !showDate;
    });
  });
</script>

<style>
  .clock {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
    padding: 40px 0;
    margin: 20px 0;

    background-color: #7b0828;
  }

  .hour_marker {
    fill: transparent;
    stroke: #f0f0c9;
    stroke-width: 7;
    stroke-dasharray: 0.2, 4.8;
    stroke-dashoffset: 0.1;
  }

  .minute_marker {
    fill: transparent;
    stroke: #0f0e0e;
    stroke-width: 7;
    stroke-dasharray: 0.2, 0.8;
    stroke-dashoffset: 0.1;
  }

  .hand {
    stroke: #ffffff;
    stroke-width: 2;
    stroke-linecap: round;
  }

  .hand--thick {
    stroke-width: 7;
  }

  .hand--second {
    stroke: yellow;
  }

  .center {
    fill: #7b0828;
    stroke-width: 2;
    stroke: white;
  }

  .text {
    fill: #f0f0c9;
    text-anchor: middle;
    cursor: pointer;
    user-select: none;
  }
</style>
