---
import { getCollection } from "astro:content";

import Markdown from "../components/Markdown.astro";
import Share from "../components/ShareThisArticle.astro";
import Suggestions from "../components/Suggestions.astro";
import End from "../components/End.astro";

export interface Props {
  slug: string;
  day: number;
  title: string;
  Component: any;
  category: string;
  description: string;
  suggestions: string[];
}

const { slug, day, title, Component, category, suggestions } =
  Astro.props as Props;

const numberOfEntries = (await getCollection("svg")).length;
const thereIsNext = day !== numberOfEntries;
---

<div class="detail-content">
  <figure class="image-for-big-screen">
    <Component size="1" id="big" />
  </figure>

  <article>
    <p class="breadcrumb">
      <a href="/">SVG Tutorial</a> / <a href="/#table-of-contents">{category}</a
      > / Day {day}
    </p>
    <h1>{title}</h1>
    <figure class="image-for-small-screen">
      <Component size="1" id="top" />
    </figure>
    <Markdown>
      <slot />
    </Markdown>
    <figure class="image-for-small-screen">
      <Component size="1" id="bottom" />
    </figure>

    <Share slug={slug} title={title} />
    <Suggestions current={day} suggestions={suggestions} />
    {!thereIsNext && <End />}
  </article>
</div>

<style>
  .detail-content {
    display: grid;
    justify-content: center;
    width: 100%;
  }

  @media (min-width: 900px) {
    .detail-content {
      grid-template-columns: 1.2fr minmax(500px, 2fr);
    }
  }

  figure {
    margin: 0;
    padding: 0;
  }

  article {
    overflow: hidden;
    max-height: 100%;

    padding: 40px;
    margin: 0;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  .breadcrumb a {
    text-decoration: none;
    color: inherit;
  }

  @media (min-width: 900px) {
    article h1 {
      font-size: 2em;
      margin-block-start: 0.83em;
      margin-block-end: 0.83em;
    }
  }

  @media (min-width: 1200px) {
    article {
      border-top-right-radius: 10px;
      border-bottom-right-radius: 10px;
    }
  }

  .image-for-big-screen {
    position: sticky;
    top: 0;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 20px;
    height: 100vh;
  }

  @media (min-width: 1200px) {
    .image-for-big-screen {
      height: calc(100vh - 30px);
    }
  }

  @media (max-width: 899px) {
    .image-for-big-screen {
      display: none;
    }
  }

  .image-for-small-screen {
    display: flex;
    justify-content: center;
  }

  @media (min-width: 900px) {
    .image-for-small-screen {
      display: none;
    }
  }
</style>

<style is:global>
  article p,
  article a,
  article h1,
  article figure,
  article div:not(.markdown-final) {
    max-width: 550px;
  }
</style>
